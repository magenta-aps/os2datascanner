stages:
  - lint
  - notices
  - test
  - check
  - build

# Lint stage
#############

.lint-default: &lint-default
  stage: lint
  needs: []
  services: []
  tags:
    - docker
  allow_failure: false

Lint Python:
  <<: *lint-default
  image: python:3.6
  before_script:
    - pip install flake8 flake8-gl-codeclimate black
  script:
    - black --check src
    - flake8 --version
    - flake8 --format gl-codeclimate --tee --output-file build/code-quality.json src/
  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - build/code-quality.json
    reports:
      codequality: build/code-quality.json

Lint Dockerfiles:
  <<: *lint-default
  image: hadolint/hadolint:latest-debian
  before_script:
    - apt-get -y update
    - apt-get -y install --no-install-recommends git
  script:
    - git ls-files --exclude='Dockerfile*' --ignored | xargs --max-lines=1 hadolint

Lint shell scripts:
  <<: *lint-default
  image: koalaman/shellcheck-alpine:latest
  before_script:
    - apk update
    - apk add git
  script:
    - git ls-files --exclude='*.sh' --ignored | xargs shellcheck




# OLD CI
#########

variables:
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .cache/

notice:
  stage: notices
  image: python:3.6
  services:
    - postgres:alpine
    - rabbitmq:alpine
  variables:
    POSTGRES_DB: os2datascanner_admin
    POSTGRES_USER: os2datascanner_admin
    POSTGRES_PASSWORD: os2datascanner_admin
    POSTGRES_HOST: postgres
    AMQP_HOST: rabbitmq
    AMQP_USER: guest
    AMQP_PWD: guest
    DJANGO_SETTINGS_MODULE: os2datascanner.projects.admin.settings
    SECRET_KEY: TestDummy!TestDummy!TestDummy!TestDummy!TestDummy!

  script:
    - apt-get update -qq
    - "apt-get install -qq $(cut -d \\# -f 1 requirements/sys-requirements/sys-requirements-admin.txt requirements/sys-requirements/sys-requirements-common.txt requirements/sys-requirements/sys-requirements-django.txt requirements/sys-requirements/sys-requirements-engine.txt)"
    - pip install -e . -r requirements/python-requirements/requirements-test.txt

    - python -m os2datascanner.projects.admin.manage makemigrations --check --dry-run

    - python -m unittest discover -s src/ -p notice*.py

  allow_failure: true

tests:
  stage: test
  services:
    - postgres:alpine
    - rabbitmq:alpine
    - name: dperson/samba:amd64
      alias: samba
      # XXX: this should be replaced with a fork under our control (see #37182)
  image: python:3.6
  variables:
    USER: os2;12345_rosebud_password_admin
    SHARE: general;${CI_PROJECT_DIR}/src/os2datascanner/tests/data/engine2;no;yes
    POSTGRES_DB: os2datascanner_admin
    POSTGRES_USER: os2datascanner_admin
    POSTGRES_PASSWORD: os2datascanner_admin
    POSTGRES_HOST: postgres
    AMQP_HOST: rabbitmq
    AMQP_USER: guest
    AMQP_PWD: guest
    DJANGO_SETTINGS_MODULE: os2datascanner.projects.admin.settings
    SECRET_KEY: TestDummy!TestDummy!TestDummy!TestDummy!TestDummy!

  coverage: '/^TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+(\d+(?:\.\d+)?\%)$/'

  script:
    - apt-get update -qq
    - "apt-get install -qq $(cut -d \\# -f 1 requirements/sys-requirements/sys-requirements-admin.txt requirements/sys-requirements/sys-requirements-common.txt requirements/sys-requirements/sys-requirements-django.txt requirements/sys-requirements/sys-requirements-engine.txt)"
    - pip install -e . -r requirements/python-requirements/requirements-test.txt

    - python -m os2datascanner.projects.admin.manage makemigrations --check --dry-run

    - coverage erase
    - coverage run -m django test os2datascanner.tests

  after_script:
    - coverage html
    - coverage xml
    - coverage report

  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - htmlcov
      - build/test-results.xml
      - build/coverage.xml
    reports:
      junit: build/test-results.xml

docs:
  stage: build
  image: keimlink/sphinx-doc:latex
  script:
    - make -C doc PAPER=a4 html latexpdf
    - mv doc/_build .

  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - _build
