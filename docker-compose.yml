version: '3.4'
services:
  db:
    image: postgres:12
    env_file:
      - dev-environment/admin/db.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres-initdb.d/20-create-db-and-user.sh:/docker-entrypoint-initdb.d/20-create-db-and-user.sh

  admin-frontend:
    build:
      context: .
      dockerfile: docker/admin/Dockerfile
      target: frontend
    volumes:
      - frontend-bundles:/code/src/os2datascanner/projects/admin/adminapp/static/dist/
      - /code/frontend/mode_modules

  admin-application:
    build:
      context: .
      dockerfile: docker/admin/Dockerfile
      target: application
    env_file:
      - dev-environment/admin/django.env
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - frontend-bundles:/code/src/os2datascanner/projects/admin/adminapp/static/dist/
      - ./dev-environment/admin/dev-settings.toml:/user-settings.toml
      - ./dev-environment/admin/dev-settings.py:/code/src/os2datascanner/projects/admin/local_settings.py
      - ./src/os2datascanner:/code/src/os2datascanner
    ports:
      - "8000:8000"
    depends_on:
      - db
      - admin-frontend

volumes:
  frontend-bundles:
  postgres-data:
  postgres-initdb.d:
